###################### Packetbeat Configuration Example #######################

# This file is a full configuration example documenting all non-deprecated
# options in comments. For a shorter configuration example, that contains only
# the most common options, please see packetbeat.yml in the same directory.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/packetbeat/index.html

name: "packetbeat"
setup.dashboards.enabled: true


# =============================== Network device ===============================

# Select the network interface to sniff the data. You can use the "any"
# keyword to sniff on all connected interfaces.
packetbeat.interfaces.device: any



# Forcing Elasticsearch index template 
setup.template.overwrite: true

setup.kibana.host: "https://kib01:5601"
setup.kibana.protocol: "https"
setup.kibana.ssl.enabled: true
setup.kibana.username: elastic
setup.kibana.password: fBfGcaS3NlToqhEBUJA6
setup.kibana.ssl.certificate_authorities: ["/usr/share/elasticsearch/config/certificates/ca/ca.crt"]
setup.kibana.ssl.certificate: "/usr/share/elasticsearch/config/certificates/packet01/packet01.crt"
setup.kibana.ssl.key: "/usr/share/elasticsearch/config/certificates/packet01/packet01.key"


packetbeat.flows:
  timeout: 30s
  period: 10s

packetbeat.protocols.dns:
  ports: [53]
  include_authorities: true
  include_additionals: true

packetbeat.protocols.icmp:
  enabled: true

packetbeat.protocols.http:
  ports: [80, 8080, 8081, 5000, 8002, 4200, 3000]

  # Instead of sending a white list of headers to Elasticsearch, you can send
  # all headers by setting this option to true. The default is false.
  send_all_headers: true

packetbeat.protocols.tls:
  ports: [443, 5601, 9200]

#packetbeat.protocols.memcache:
#  ports: [11211]

#packetbeat.protocols.mysql:
#  ports: [3306]

#packetbeat.protocols.pgsql:
#  ports: [5432]

#packetbeat.protocols.redis:
#  ports: [6379]

#packetbeat.protocols.thrift:
#  ports: [9090]

packetbeat.protocols.mongodb:
  ports: [27017]

#packetbeat.protocols.cassandra:
#  ports: [9042]


# ================================= Processors =================================

# Processors are used to reduce the number of fields in the exported event or to
# enhance the event with external metadata. This section defines a list of
# processors that are applied one by one and the first one receives the initial
# event:
#
#   event -> filter1 -> event1 -> filter2 ->event2 ..

# The following example drops the events that have the HTTP response code 200:
#
#processors:
#  - drop_event:
#      when:
#        equals:
#          http.code: 200

# The following example enriches each event with docker metadata, it matches
# given fields to an existing container id and adds info from that container:
#
processors:
  - add_docker_metadata:
      host: "unix:///var/run/docker.sock"
      match_fields: ["system.process.cgroup.id"]
      match_pids: ["process.pid", "process.ppid"]
      match_source: true
      match_source_index: 4
      match_short_id: false
      cleanup_timeout: 60
      labels.dedot: false
      # To connect to Docker over TLS you must specify a client and CA certificate.
      ssl:
        certificate_authority: ["/usr/share/elasticsearch/config/certificates/ca/ca.crt"]
        certificate: "/usr/share/elasticsearch/config/certificates/packet01/packet01.crt"
        key: "/usr/share/elasticsearch/config/certificates/packet01/packet01.key"

# The following example enriches each event with docker metadata, it matches
# container id from log path available in `source` field (by default it expects
# it to be /var/lib/docker/containers/*/*.log).

processors:
  - add_docker_metadata: ~

# The following example enriches each event with host metadata.
#
#processors:
  - add_host_metadata: ~



# ============================ Monitored processes =============================

# Packetbeat can enrich events with information about the process associated
# the socket that sent or received the packet if Packetbeat is monitoring
# traffic from the host machine. By default process enrichment is disabled.
# This feature works on Linux and Windows.
packetbeat.procs.enabled: true

# If you want to ignore transactions created by the server on which the shipper
# is installed you can enable this option. This option is useful to remove
# duplicates if shippers are installed on multiple servers. Default value is
# false.
packetbeat.ignore_outgoing: false

#output.logstash:
#  hosts: ["logstash:5044"]
#  ssl.certificate_authorities: ["/usr/share/elasticsearch/config/certificates/ca/ca.crt"]
#  ssl.certificate: "/usr/share/elasticsearch/config/certificates/packet01/packet01.crt"
#  ssl.key: "/usr/share/elasticsearch/config/certificates/packet01/packet01.key"
#  index: packetbeat

# Commented out for reference if you wanted
# to send directly to elasticsearch

output.elasticsearch:
  hosts: ["https://es01:9200"]
  protocol: "https"
  username: elastic
  password: fBfGcaS3NlToqhEBUJA6
  ssl.enabled: true
  ssl.certificate_authorities: ["/usr/share/elasticsearch/config/certificates/ca/ca.crt"]
  ssl.certificate: "/usr/share/elasticsearch/config/certificates/packet01/packet01.crt"
  ssl.key: "/usr/share/elasticsearch/config/certificates/packet01/packet01.key"
version: '2.2'

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster      
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"      
      - xpack.license.self_generated.type=trial # <1>
      - xpack.security.enabled=true      
      - xpack.security.http.ssl.enabled=true # <2>
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true # <3>
      - xpack.security.transport.ssl.verification_mode=certificate # <4>
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: 
      - data01:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9200:9200
    networks:
      - elastic
      
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kib01:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    container_name: kib01
    depends_on: {"es01": {"condition": "service_healthy"}}
    ports:
      - 5601:5601
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://es01:9200
      ELASTICSEARCH_HOSTS: https://es01:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: 5y3cS8zKxXXYwBlVIbvJ
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $CERTS_DIR/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: $CERTS_DIR/kib01/kib01.key
      SERVER_SSL_CERTIFICATE: $CERTS_DIR/kib01/kib01.crt
      xpack.security.enabled: "true"
      xpack.encryptedSavedObjects.encryptionKey: 6JkAIj0VW60phSt+KhPRUcnCnMQo2Wr1c6IW+52mGoHt2q8TvX7sdG08u1+45BaM
      xpack.security.encryptionKey: 6JkAIj0VW60phSt+KhPRUcnCnMQo2Wr1c6IW+52mGoHt2q8TvX7sdG08u1+45BaM
      xpack.reporting.encryptionKey: 6JkAIj0VW60phSt+KhPRUcnCnMQo2Wr1c6IW+52mGoHt2q8TvX7sdG08u1+45BaM
    volumes:
      - certs:$CERTS_DIR
    networks:
      - elastic
  
  metric01:
    container_name: metric01
    image: docker.elastic.co/beats/metricbeat:${VERSION}
    user: root
    restart: unless-stopped
    cap_add: 
      - NET_ADMIN
      - NET_RAW
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    volumes:
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:$CERTS_DIR 
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic

  file01:
    container_name: file01
    image: docker.elastic.co/beats/filebeat:${VERSION}
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - certs:$CERTS_DIR 
    command: ["-strict.perms=false"]
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    ports:
      - "9000:9000" 
    networks:
      - elastic
    restart: unless-stopped

volumes:
  data01:
    driver: local
  certs:
    driver: local

networks: 
  elastic:
    driver: bridge    
